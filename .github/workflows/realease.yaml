name: Publish Helm Charts

on:
  # Trigger on pushes to the main branch affecting the Helm charts directory
  push:
    branches: [ master ]

  # Optional: Trigger manually from the Actions tab
  workflow_dispatch:

# Permissions needed for the GITHUB_TOKEN to push packages
# NOTE: These permissions apply to GITHUB_TOKEN. If using a PAT,
# the PAT's own scopes determine permissions.
permissions:
  contents: write
  packages: write

jobs:
  publish-helm-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Log in to GitHub Container Registry using PAT
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and Push Helm Charts
        run: |
          echo "Processing chart in $chart_dir..."

          # Update dependencies for the chart (important before packaging)
          echo "Updating dependencies"
          helm dependency update .

          echo "Packaging..."
          helm package .

          export CHART_VERSION=$(grep -m 1 'version:' ./Chart.yaml | tail -n1 | awk '{ print $2 }')

          echo "Pushing Chart..."
          helm push swetrix-${CHART_VERSION}.tgz oci://ghcr.io/tbcashy
        env:
          # Helm experimental features needed for OCI push in older versions
          # Keep enabled for compatibility, though stable in recent Helm
          HELM_EXPERIMENTAL_OCI: 1
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser job
        uses: helm/chart-releaser-action@v1.4.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"